{"ts":1357765509486,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":true,"ts":1357765512946,"patch":[[{"diffs":[[1,"/* ===========================================================\n * bootstrap-modal.js v2.0\n * ===========================================================\n * Copyright 2012 Jordan Schroter\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * ========================================================== */\n\n\n!function ($) {\n\n    \"use strict\"; // jshint ;_;\n\t\n\t/* MODAL CLASS DEFINITION\n\t* ====================== */\n\n\tvar Modal = function (element, options) {\n\t\tthis.init(element, options);\n\t}\n\n\tModal.prototype = {\n\n\t\tconstructor: Modal, \n\t\t\n\t\tinit: function (element, options) {\n\t\t\tthis.options = options;\n\t\t\n\t\t\tthis.$element = $(element)\n\t\t\t\t.delegate('[data-dismiss=\"modal\"]', 'click.dismiss.modal', $.proxy(this.hide, this));\n\t\t\t\t\n\t\t\tthis.options.remote && this.$element.find('.modal-body').load(this.options.remote);\n\t\t\t\n\t\t\tvar manager = typeof this.options.manager === 'function' ? \n\t\t\t\tthis.options.manager.call(this) : this.options.manager;\n\n\t\t\tmanager = manager.appendModal ? \n\t\t\t\tmanager : $(manager).modalmanager().data('modalmanager');\n\n\t\t\tmanager.appendModal(this);\n\t\t}, \n\t\t\n\t\ttoggle: function () {\n\t\t\treturn this[!this.isShown ? 'show' : 'hide']();\n\t\t}, \n\t\t\n\t\tshow: function () {\n\t\t\tvar that = this, \n\t\t\t\te = $.Event('show');\n\t\t\t\n\t\t\tif (this.isShown) return;\n\n\t\t\tthis.$element.triggerHandler(e);\n\n\t\t\tif (e.isDefaultPrevented()) return;\n\t\t\t\n\t\t\tif (this.options.width){\n\t\t\t\tthis.$element.css('width', this.options.width);\n\t\t\t\t\n\t\t\t\tvar that = this;\n\t\t\t\tthis.$element.css('margin-left', function () {\n\t\t\t\t\tif (/%/ig.test(that.options.width)){\n\t\t\t\t\t\treturn -(parseInt(that.options.width) / 2) + '%';\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn -($(this).width() / 2) + 'px';\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\n\t\t\tvar prop = this.options.height ? 'height' : 'max-height';\n\n\t\t\tvar value = this.options.height || this.options.maxHeight;\n\t\t\t\n\t\t\tif (value){\n\t\t\t\tthis.$element.find('.modal-body')\n\t\t\t\t\t.css('overflow', 'auto')\n\t\t\t\t\t.css(prop, value);\n\t\t\t}\n\n\t\t\tthis.escape();\n\n\t\t\tthis.tab();\n\t\t\t\n\t\t\tthis.options.loading && this.loading();\n\t\t}, \n\t\t\n\t\thide: function (e) {\n\t\t\te && e.preventDefault();\n\n\t\t\te = $.Event('hide');\n\n\t\t\tthis.$element.triggerHandler(e);\n\n\t\t\tif (!this.isShown || e.isDefaultPrevented()) return (this.isShown = false);\n\n\t\t\tthis.isShown = false;\n\n\t\t\tthis.escape();\n\n\t\t\tthis.tab();\n\t\t\t\n\t\t\tthis.isLoading && this.loading();\n\n\t\t\t$(document).off('focusin.modal');\n\n\t\t\tthis.$element\n\t\t\t\t.removeClass('in')\n\t\t\t\t.removeClass('animated')\n\t\t\t\t.removeClass(this.options.attentionAnimation)\n\t\t\t\t.removeClass('modal-overflow')\n\t\t\t\t.attr('aria-hidden', true);\n\n\t\t\t$.support.transition && this.$element.hasClass('fade') ?\n\t\t\t\tthis.hideWithTransition() :\n\t\t\t\tthis.hideModal();\n\t\t}, \n\n\t\ttab: function () {\n\t\t\tvar that = this;\n\n\t\t\tif (this.isShown && this.options.consumeTab) {\t\t\t\n\t\t\t\tthis.$element.on('keydown.tabindex.modal', '[data-tabindex]', function (e) {\t\t    \t\n\t\t\t    \tif (e.keyCode && e.keyCode == 9){\t       \n\t\t\t\t        var $next = $(this), \n\t\t\t\t        \t$rollover = $(this);\n\t\t\t\t        \n\t\t\t\t       \tthat.$element.find('[data-tabindex]:enabled:not([readonly])').each(function (e) {\n\t\t\t         \t\tif (!e.shiftKey){\n\t\t\t           \t \t\t$next = $next.data('tabindex') < $(this).data('tabindex') ?\n\t\t\t\t              \t\t$next = $(this) :\n\t\t\t\t              \t\t$rollover = $(this);\n\t\t\t\t          \t} else {\n\t\t\t\t            \t$next = $next.data('tabindex') > $(this).data('tabindex') ?\n\t\t\t\t              \t\t$next = $(this) :\n\t\t\t\t             \t\t$rollover = $(this);\n\t\t\t\t          \t}\n\t\t\t\t        });\n\n\t\t\t\t        $next[0] !== $(this)[0] ?\n\t\t\t          \t\t$next.focus() : $rollover.focus();\n\n\t\t\t\t        e.preventDefault();\n\n\t\t\t      \t}\n\t\t\t    });\n\t\t\t} else if (!this.isShown) {\n\t\t\t\tthis.$element.off('keydown.tabindex.modal');\n\t\t\t}\n\t\t}, \n\t\t\n\t\tescape: function () {\n\t\t\tvar that = this;\n\t\t\tif (this.isShown && this.options.keyboard) {\n\t\t\t\tif (!this.$element.attr('tabindex')) this.$element.attr('tabindex', -1);\n\t\t\t\t\n\t\t\t\tthis.$element.on('keyup.dismiss.modal', function (e) {\n\t\t\t\t\te.which == 27 && that.hide();\n\t\t\t\t});\n\t\t\t} else if (!this.isShown) {\n\t\t\t\tthis.$element.off('keyup.dismiss.modal')\n\t\t\t}\n\t\t}, \n\t\t\n\t\thideWithTransition: function () {\n\t\t\tvar that = this\n\t\t\t\t, timeout = setTimeout(function () {\n\t\t\t\t\tthat.$element.off($.support.transition.end)\n\t\t\t\t\tthat.hideModal()\n\t\t\t\t}, 500);\n\n\t\t\tthis.$element.one($.support.transition.end, function () {\n\t\t\t\tclearTimeout(timeout)\n\t\t\t\tthat.hideModal()\n\t\t\t});\n\t\t}, \n\t\t\n\t\thideModal: function () {\n\t\t\tthis.$element\n\t\t\t\t.hide()\n\t\t\t\t.triggerHandler('hidden');\n\n\n\t\t\tvar prop = this.options.height ? 'height' : 'max-height';\n\t\t\tvar value = this.options.height || this.options.maxHeight;\n\t\t\t\n\t\t\tif (value){\n\t\t\t\tthis.$element.find('.modal-body')\n\t\t\t\t\t.css('overflow', '')\n\t\t\t\t\t.css(prop, '');\n\t\t\t}\n\n\t\t}, \n\n\t\tremoveLoading: function () {\n\t\t\tthis.$loading.remove();\n\t\t\tthis.$loading = null;\n\t\t\tthis.isLoading = false;\n\t\t},\n\t\t\n\t\tloading: function (callback) {\n\t\t\tcallback = callback || function () {};\n\t\t\n\t\t\tvar animate = this.$element.hasClass('fade') ? 'fade' : '';\n\t\t\t\n\t\t\tif (!this.isLoading) {\n\t\t\t\tvar doAnimate = $.support.transition && animate;\n\t\t\t\t\n\t\t\t\tthis.$loading = $('<div class=\"loading-mask ' + animate + '\">')\n\t\t\t\t\t.append(this.options.spinner)\n\t\t\t\t\t.appendTo(this.$element);\n\n\t\t\t\tif (doAnimate) this.$loading[0].offsetWidth // force reflow\t\n\t\t\t\t\t\n\t\t\t\tthis.$loading.addClass('in')\n\n\t\t\t\tthis.isLoading = true;\n\t\t\t\t\n\t\t\t\tdoAnimate ?\n\t\t\t\t\tthis.$loading.one($.support.transition.end, callback) :\n\t\t\t\t\tcallback();\n\n\t\t\t} else if (this.isLoading && this.$loading) {\n\t\t\t\tthis.$loading.removeClass('in');\n\n\t\t\t\tvar that = this;\n\t\t\t\t$.support.transition && this.$element.hasClass('fade')?\n\t\t\t\t\tthis.$loading.one($.support.transition.end, function () { that.removeLoading() }) :\n\t\t\t\t\tthat.removeLoading();\n\n\t\t\t} else if (callback) {\n\t\t\t\tcallback(this.isLoading);\n\t\t\t}\n\t\t},\n\t\t\n\t\tfocus: function () {\n\t\t\tvar $focusElem = this.$element.find(this.options.focusOn);\n\n\t\t\t$focusElem = $focusElem.length ? $focusElem : this.$element;\n\n\t\t\t$focusElem.focus();\n\t\t},\n\n\t\tattention: function (){\n\t\t\t// NOTE: transitionEnd with keyframes causes odd behaviour\n\n\t\t\tif (this.options.attentionAnimation){\n\t\t\t\tthis.$element\n\t\t\t\t\t.removeClass('animated')\n\t\t\t\t\t.removeClass(this.options.attentionAnimation);\n\n\t\t\t\tvar that = this;\n\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\tthat.$element\n\t\t\t\t\t\t.addClass('animated')\n\t\t\t\t\t\t.addClass(that.options.attentionAnimation);\n\t\t\t\t}, 0);\n\t\t\t}\n\n\n\t\t\tthis.focus();\n\t\t},\n\t\t\n\n\t\tdestroy: function () {\n\t\t\tvar e = $.Event('destroy');\n\t\t\tthis.$element.triggerHandler(e);\n\t\t\tif (e.isDefaultPrevented()) return;\n\t\t\t\n\t\t\tthis.teardown();\n\t\t},\n\t\t\n\t\tteardown: function () {\t\n\t\t\tif (!this.$parent.length){\n\t\t\t\tthis.$element.remove();\n\t\t\t\tthis.$element = null;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this.$parent !== this.$element.parent()){\n\t\t\t\tthis.$element.appendTo(this.$parent);\n\t\t\t}\n\n\t\t\tthis.$element.off('.modal');\n\t\t\tthis.$element.removeData('modal');\n\t\t\tthis.$element\n\t\t\t\t.removeClass('in')\n\t\t\t\t.attr('aria-hidden', true);\n\t\t}\n\t}\n\n\n\t/* MODAL PLUGIN DEFINITION\n\t* ======================= */\n\n\t$.fn.modal = function (option) {\n\t\treturn this.each(function () {\n\t\t\tvar $this = $(this), \n\t\t\t\tdata = $this.data('modal'), \n\t\t\t\toptions = $.extend({}, $.fn.modal.defaults, $this.data(), typeof option == 'object' && option);\n\n\t\t\tif (!data) $this.data('modal', (data = new Modal(this, options)))\n\t\t\tif (typeof option == 'string') data[option]()\n\t\t\telse if (options.show) data.show()\n\t\t})\n\t}\n\n\t$.fn.modal.defaults = {\n\t\tkeyboard: true, \n\t\tbackdrop: true,\n\t\tloading: false,\n\t\tshow: true,\n\t\twidth: null,\n\t\theight: null,\n\t\tmaxHeight: null,\n\t\tmodalOverflow: false,\n\t\tconsumeTab: true,\n\t\tfocusOn: null,\n\t\tattentionAnimation: 'shake',\n\t\tmanager: 'body',\n\t\tspinner: '<div class=\"loading-spinner\" style=\"width: 200px; margin-left: -100px;\"><div class=\"progress progress-striped active\"><div class=\"bar\" style=\"width: 100%;\"></div></div></div>'\n\t}\n\n\t$.fn.modal.Constructor = Modal\n\n\n\t/* MODAL DATA-API\n\t* ============== */\n\t\n\t$(function () {\n\t\t$(document).off('.modal').on('click.modal.data-api', '[data-toggle=\"modal\"]', function ( e ) {\n\t\t\tvar $this = $(this), \n\t\t\t\thref = $this.attr('href'), \n\t\t\t\t$target = $($this.attr('data-target') || (href && href.replace(/.*(?=#[^\\s]+$)/, ''))), //strip for ie7 \n\t\t\t\toption = $target.data('modal') ? 'toggle' : $.extend({ remote: !/#/.test(href) && href }, $target.data(), $this.data());\n\n\t\t\te.preventDefault();\n\t\t\t$target\n\t\t\t\t.modal(option)\n\t\t\t\t.one('hide', function () {\n\t\t\t\t\t$this.focus();\n\t\t\t\t})\n\t\t});\n\t});\n\n}(window.jQuery);"]],"start1":0,"start2":0,"length1":0,"length2":8942}]],"length":8942,"saved":false}
